<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 반드시 mapper 위치로 설정해야 된다. -->
<mapper namespace="com.ict.finalpj.domain.camplog.mapper.CampLogMapper">
	<select id="getCamplogList" parameterType="CampLogListVO" resultType="CampLogListVO">
    select * from 
		(
        	select 
            	cl.logIdx,  cl.logTitle, cl.logRegdate, u.userNickname, c.campIdx, c.facltNm, cn.logContent, f.fileName, 
           		re.reportStatus, 
				<!-- re.userIdx as reporterUserIdx,  -->
				GROUP_CONCAT(DISTINCT re.userIdx) as reporterUserIds, 
				re.reportedUserIdx,  
				re.reportTableIdx, re2.reportCount, 
            	(select count(*) from pjcamplogrecommend cr where cr.logIdx = cl.logIdx) as totalLikes, 
            	(select count(*) from pjcamplogcomment cm where cm.logIdx = cl.logIdx and cm.logCommentIsActive = 1) as totalCount, 
            	<!-- ROW_NUMBER() over (partition by cl.logIdx, re.userIdx order by re.reportRegDate desc) as rn  -->
				ROW_NUMBER() over (partition by cl.logIdx order by cl.logIdx desc) as rn 
        	from pjcamplog cl 
        	left join pjuser u on cl.userIdx = u.userIdx 
        	left join pjcamplogcontent cn on cl.logIdx = cn.logIdx 
        	left join pjfile f on f.fileTableType = 1 and cl.logIdx = f.fileTableIdx and f.isThumbnail = 1 
        	left join pjcamp c on cl.campIdx = c.campIdx 
        	left join pjreport re on re.reportTableType = 3 and re.reportTableIdx = cl.logIdx 
        	left join (
            	select reportTableIdx, count(*) as reportCount from pjreport group by reportTableIdx 
        	) re2 on cl.logIdx = re2.reportTableIdx 
        	where cl.logIsActive = 1 
            	and (re.reportStatus != 1 or re.reportStatus is null) 
            	<if test="option == 'all' and keyword != null"> 
                	and (cl.logTitle like concat('%', #{keyword}, '%') 
                	or cn.logContent like concat('%', #{keyword}, '%'))
            	</if>
            	<if test="option == 'title' and keyword != null"> 
                	and cl.logTitle like concat('%', #{keyword}, '%')
           		</if>
            	<if test="option == 'content' and keyword != null"> 
                	and cn.logContent like concat('%', #{keyword}, '%')
            	</if>
			group by 
         		cl.logIdx, cl.logTitle, cl.logRegdate, u.userNickname, c.campIdx, c.facltNm, 
           		cn.logContent, f.fileName, re.reportStatus, re.reportedUserIdx, re.reportTableIdx, re2.reportCount	
        	order by 
            	<choose>
                	<when test="sortOption == 'latest'"> 
                    	cl.logIdx desc
                	</when>
                	<when test="sortOption == 'likes'">
                    	totalLikes desc, cl.logIdx desc
                	</when>
            	</choose>
    	) ranked
    		where ranked.rn = 1 
    		order by ranked.logIdx desc 
    		limit #{size} offset #{offset}
	</select>

	<select id="getCampLogCount" parameterType="CampLogListVO" resultType="int">
		select count(distinct cl.logIdx) from pjcamplog cl 
		left join pjcamplogcontent cn on cl.logIdx = cn.logIdx 
		left join pjreport re on re.reportTableType = 3 and re.reportTableIdx = cl.logIdx
		where cl.logIsActive = 1 
			and (re.reportStatus != 1 or re.reportStatus is null)
				<if test="option == 'all' and keyword != null and keyword != ''"> 
					and (cl.logTitle like concat('%', #{keyword}, '%')
						or cn.logContent like concat('%', #{keyword}, '%')) 
				</if>
				<if test="option == 'title' and keyword != null and keyword != ''">
					and cl.logTitle like concat('%', #{keyword}, '%') 
				</if>
				<if test="option == 'content' and keyword != null and keyword != ''">
					and cn.logContent like concat('%', #{keyword}, '%')
				</if>
	</select>
</mapper>