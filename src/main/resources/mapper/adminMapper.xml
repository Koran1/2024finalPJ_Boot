<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 반드시 mapper 위치로 설정해야 된다. -->
<mapper namespace="com.ict.finalpj.domain.admin.mapper.AdminMapper">

<select id="getDealManagement" resultType="DealVO">
    SELECT coalesce(pjfile.fileName, 'noimg') as deal01, pjdeal.* 
    FROM pjdeal 
    JOIN pjfile ON pjdeal.dealIdx = pjfile.fileTableIdx 
    AND pjfile.fileTableType = 2 
    AND pjfile.fileOrder = 0
    ORDER BY pjdeal.dealRegDate DESC
</select>

<!-- 상세 정보 조회 (메인 이미지) -->
<select id="getDealDetail" parameterType="String" resultType="DealVO">
    SELECT 
        d.*,
        COALESCE(f.fileName, 'noimg') as deal01,
        COALESCE(d.dealview, 1) as dealview
    FROM pjdeal d
    LEFT JOIN pjfile f ON d.dealIdx = f.fileTableIdx 
        AND f.fileTableType = 2 
        AND f.fileOrder = 0
    WHERE d.dealIdx = #{dealIdx}
</select>

<!-- 상품 이미지 전체 조회 (스몰 이미지들) -->
<select id="getDealFiles" parameterType="String" resultType="FileVO">
    SELECT * 
    FROM pjfile 
    WHERE fileTableIdx = #{dealIdx}
        AND fileTableType = 2
    ORDER BY fileOrder ASC
</select>

<select id="getFavoriteCount" parameterType="String" resultType="int">
    SELECT COUNT(*) FROM pjdealfavorite WHERE dealIdx = #{dealIdx}
</select>

<select id="getSellerOtherDeals" parameterType="String" resultType="DealVO">
    SELECT d.* FROM pjdeal d
    WHERE d.dealSellerUserIdx = (
        SELECT dealSellerUserIdx FROM pjdeal WHERE dealIdx = #{dealIdx}
    )
    AND d.dealIdx != #{dealIdx}
</select>

<!-- 판매자의 다른 상품 이미지 -->
<select id="getSellerOtherFiles" parameterType="String" resultType="FileVO">
    SELECT DISTINCT f.* 
    FROM pjfile f
    JOIN pjdeal d ON f.fileTableIdx = d.dealIdx
    WHERE d.dealSellerUserIdx = (
        SELECT dealSellerUserIdx FROM pjdeal WHERE dealIdx = #{dealIdx}
    )
    AND d.dealIdx != #{dealIdx}
    AND f.fileTableType = 2
    AND f.fileOrder = 0
</select>

<select id="getDealSatisSellerScore" parameterType="String" resultType="String">
    SELECT 
        COALESCE(
            ROUND(AVG(dealSatisSellerScore), 1), 
            '5.0'
        ) as avgScore
    FROM pjdealsatisfaction 
    WHERE dealSatisSellerIdx = #{userIdx}
</select>

<update id="getAdminDealActiveUpdate" parameterType="map">
    UPDATE pjdeal 
    SET dealview = #{dealview} 
    WHERE dealIdx = #{dealIdx}
</update>

    <!-- 캠핑정보 관리 -->
    <select id="getSearchList" parameterType="CampSearchVO" resultType="CampVO">
        select * from pjcamp 
        where 1=1 
        <if test="sortOption == 'all'">
            <if test="keyword != null">
                and facltNm like concat('%', #{keyword}, '%')
            </if>
        </if>
        <if test="sortOption == 'open'">
            and manageSttus = '운영'
            <if test="keyword != null">
                and facltNm like concat('%', #{keyword}, '%')
            </if>
        </if>
        <if test="sortOption == 'closed'">
            and manageSttus = '휴장'
            <if test="keyword != null">
                and facltNm like concat('%', #{keyword}, '%')
            </if>
        </if>
        order by campIdx asc
        limit #{size} offset #{offset}
    </select>

    <select id="getSearchCount" parameterType="CampSearchVO" resultType="int">
        select count(*) from pjcamp 
        where 1=1 
             <if test="sortOption == 'all'">
            <if test="keyword != null">
                and facltNm like concat('%', #{keyword}, '%')
            </if>
        </if>
        <if test="sortOption == 'open'">
            and manageSttus = '운영'
            <if test="keyword != null">
                and facltNm like concat('%', #{keyword}, '%')
            </if>
        </if>
        <if test="sortOption == 'closed'">
            and manageSttus = '휴장'
            <if test="keyword != null">
                and facltNm like concat('%', #{keyword}, '%')
            </if>
        </if>
    </select>

    <!-- QNA 관리 -->
    <select id="getQnaList" resultType="QNAVO">
        SELECT 
            pjqna.*, 
            pjuser.userNickname
        FROM 
            pjqna
        LEFT JOIN 
            pjuser
        ON 
            pjqna.userIdx = pjuser.userIdx
        ORDER BY 
            pjqna.qnaReRegDate ASC;
    </select>

    <!-- 관리자 회원 정보 리스트 -->
	<select id="getAdminUserList" parameterType="UserListVO" resultType="UserListVO">
    	select * from pjuser 
		where 1=1 
			<if test="option == 'all'">
				and (userLevel = 1 or userLevel = 2 or userLevel = 3)
				<if test="keyword != null">
					and (userName like concat('%', #{keyword}, '%') 
					or userNickname like concat('%', #{keyword}, '%'))
				</if>
			</if>
			<if test="option == 'general'">
				and userLevel = 1 
				<if test="keyword != null">
					and (userName like concat('%', #{keyword}, '%') 
					or userNickname like concat('%', #{keyword}, '%'))
				</if>
			</if>
			<if test="option == 'bad'">
				and userLevel = 3
				<if test="keyword != null">
					and (userName like concat('%', #{keyword}, '%') 
					or userNickname like concat('%', #{keyword}, '%'))
				</if>
			</if>
			<if test="option == 'rest'">
				and userLevel = 2
				<if test="keyword != null">
					and (userName like concat('%', #{keyword}, '%') 
					or userNickname like concat('%', #{keyword}, '%'))
				</if>
			</if>
		order by userIdx asc 
		limit #{size} offset #{offset}
	</select>

	<!-- 관리자 회원 정보 페이징 관련 -->
	<select id="getUserListCount" parameterType="UserListVO" resultType="int">
    	select count(*) 
    	from pjuser
    	where 1=1
        	<if test="option == 'all'">
            	and (userLevel = 1 or userLevel = 2 or userLevel = 3)
            	<if test="keyword != null">
                	and (userName like concat('%', #{keyword}, '%') 
                	or userNickname like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
        	<if test="option == 'general'">
            	and userLevel = 1
            	<if test="keyword != null">
                	and (userName like concat('%', #{keyword}, '%') 
                	or userNickname like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
        	<if test="option == 'bad'">
            	and userLevel = 3
            	<if test="keyword != null">
                	and (userName like concat('%', #{keyword}, '%') 
                	or userNickname like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
        	<if test="option == 'rest'">
            	and userLevel = 2
            	<if test="keyword != null">
                	and (userName like concat('%', #{keyword}, '%') 
                	or userNickname like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
	</select>

	<!-- 관리자 회원 정보 업데이트 -->
	<update id="getAdminUpdateUser" parameterType="UserListVO">
		update pjuser set userLevel = #{userLevel} where userIdx = #{userIdx}
	</update>

	<!-- 관리자 공지사항 리스트 -->
	<select id="getAdminNoticeList" parameterType="NoticeListVO" resultType="NoticeListVO">
    	select * from pjnotice 
		where 1=1 
			<if test="option == 'all'">
				and (noticeStatus = 'on' or noticeStatus = 'off')
				<if test="keyword != null">
					and (noticeSubject like concat('%', #{keyword}, '%'))
				</if>
			</if>
			<if test="option == 'on'">
				and noticeStatus = 'on'  
				<if test="keyword != null">
					and (noticeSubject like concat('%', #{keyword}, '%'))
				</if>
			</if>
			<if test="option == 'off'">
				and noticeStatus = 'off'
				<if test="keyword != null">
					and (noticeSubject like concat('%', #{keyword}, '%'))
				</if>
			</if>
		order by noticeIdx desc 
		limit #{size} offset #{offset}
	</select>

	<!-- 관리자 공지사항 리스트 페이징 관련 -->
	<select id="getNoticeListCount" parameterType="NoticeListVO" resultType="int">
    	select count(*) from pjnotice 
    	where 1=1
        	<if test="option == 'all'">
            	and (noticeStatus = 'on' or noticeStatus = 'off')
            	<if test="keyword != null">
                	and (noticeSubject like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
        	<if test="option == 'on'">
            	and noticeStatus = 'on' 
            	<if test="keyword != null">
                	and (noticeSubject like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
        	<if test="option == 'off'">
            	and noticeStatus = 'off' 
            	<if test="keyword != null">
                	and (noticeSubject like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
	</select>

	<!-- 관리자 공지사항 noticeStatus 업데이트  -->
	<update id="getUpdateNoticeStatus" parameterType="String">
		UPDATE pjnotice 
		SET noticeStatus = CASE 
							WHEN noticeStatus = 'on' THEN 'off' 
							ELSE 'on' 
						END
		WHERE noticeIdx = #{noticeIdx}
	</update>

	<!-- 관리자 공지사항 정보 업데이트(모달) -->
	<update id="getAdminUpdateNoticeModal" parameterType="NoticeListVO">
		update pjnotice set noticeLevel = #{noticeLevel}, noticeStatus = #{noticeStatus} where noticeIdx = #{noticeIdx}
	</update>

	<!-- 관리자 공지사항 쓰기 -->
	<insert id="getAdminNoticeListWrite" parameterType="NoticeVO">
		insert into pjnotice (noticeSubject, noticeFile, noticeContent, noticeReg, noticeLevel, noticeStatus) 
		values(#{noticeSubject}, #{noticeFile}, #{noticeContent}, #{noticeReg}, #{noticeLevel}, #{noticeStatus})
	</insert>

	<!-- 관리자 공지사항 상세 -->
	<select id="getNoticeListIdx" parameterType="String" resultType="NoticeVO">
		select * from pjnotice where noticeIdx = #{noticeIdx}
	</select>

	<!-- 관리자 공지사항 수정 -->
	<update id="getAdminNoticeListUpdate" parameterType="NoticeVO">
		update pjnotice set 
			noticeSubject = #{noticeSubject}, noticeFile = #{noticeFile}, noticeContent = #{noticeContent}, noticeReg = #{noticeReg}, noticeLevel = #{noticeLevel}, noticeStatus = #{noticeStatus} 
		where noticeIdx = #{noticeIdx}
	</update>

	<!-- 관리자 FAQ 리스트 -->
	<select id="getAdminFAQList" parameterType="FAQListVO" resultType="FAQListVO">
    	select * from pjfaq 
		where 1=1 
			<if test="option == 'all'">
				and (faqStatus = 'on' or faqStatus = 'off')
				<if test="keyword != null">
					and (faqQuestion like concat('%', #{keyword}, '%'))
				</if>
			</if>
			<if test="option == 'on'">
				and faqStatus = 'on'  
				<if test="keyword != null">
					and (faqQuestion like concat('%', #{keyword}, '%'))
				</if>
			</if>
			<if test="option == 'off'">
				and faqStatus = 'off'
				<if test="keyword != null">
					and (faqQuestion like concat('%', #{keyword}, '%'))
				</if>
			</if>
		order by faqIdx desc 
		limit #{size} offset #{offset}
	</select>

	<!-- 관리자 FAQ 리스트 페이징 관련 -->
	<select id="getFAQListCount" parameterType="FAQListVO" resultType="int">
    	select count(*) from pjfaq 
    	where 1=1
        	<if test="option == 'all'">
            	and (faqStatus = 'on' or faqStatus = 'off')
            	<if test="keyword != null">
                	and (faqQuestion like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
        	<if test="option == 'on'">
            	and faqStatus = 'on' 
            	<if test="keyword != null">
                	and (faqQuestion like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
        	<if test="option == 'off'">
            	and faqStatus = 'off' 
            	<if test="keyword != null">
                	and (faqQuestion like concat('%', #{keyword}, '%'))
            	</if>
        	</if>
	</select>

	<!-- 관리자 FAQ faqStatus 업데이트  -->
	<update id="getUpdateFAQStatus" parameterType="string">
		UPDATE pjfaq 
		SET faqStatus = CASE 
							WHEN faqStatus = 'on' THEN 'off' 
							ELSE 'on' 
						END
		WHERE faqIdx = #{faqIdx}
	</update>

	<!-- 관리자 FAQ 정보 업데이트(모달) -->
	<update id="getAdminUpdateFAQModal" parameterType="FAQVO">
		update pjfaq set faqStatus = #{faqStatus} where faqIdx = #{faqIdx}
	</update>

	<!-- 관리자 FAQ 쓰기 -->
	<insert id="getAdminFAQListWrite" parameterType="FAQVO">
		insert into pjfaq (faqQuestion, faqAnswer, faqReg, faqStatus) 
		values(#{faqQuestion}, #{faqAnswer}, #{faqReg}, #{faqStatus})
	</insert>

	<!-- 관리자 FAQ 상세 -->
	<select id="getFAQListIdx" parameterType="String" resultType="FAQVO">
		select * from pjfaq where faqIdx = #{faqIdx}
	</select>

	<!-- 관리자 FAQ 수정 -->
	<update id="getAdminFAQListUpdate" parameterType="FAQVO">
    update pjfaq set 
        faqQuestion = #{faqQuestion}, 
        faqAnswer = #{faqAnswer}, 
        faqReg = #{faqReg}, 
        faqStatus = #{faqStatus}
    where faqIdx = #{faqIdx}
</update>
</mapper>