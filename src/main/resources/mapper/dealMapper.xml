<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 반드시 mapper 위치로 설정해야 된다. -->
<mapper namespace="com.ict.finalpj.domain.deal.mapper.DealMapper">

  <!-- 공통 컬럼 -->
  <sql id="dealColumns">
    dealIdx, dealSellerUserIdx, dealSellerNick, dealTitle, dealCategory, 
    dealStatus, dealDescription, dealPrice, dealPackage, dealDirect, 
    dealDirectContent, dealCount, dealRegDate
  </sql>

  <!-- 구분 1 -->
  <select id="getDealMainList" resultType="DealVO">
    SELECT <include refid="dealColumns"/> 
    FROM pjdeal 
    ORDER BY dealIdx DESC
  </select>

  <select id="getDealFileOne" parameterType="String" resultType="FileVo">
    SELECT * FROM pjfile 
    WHERE fileTableIdx = #{fileTableIdx} 
    AND fileTableType = 2 
    AND fileOrder = 0 
    LIMIT 1
  </select>

  <select id="getDealDetail" parameterType="String" resultType="DealVO">
    SELECT <include refid="dealColumns"/>
    FROM pjdeal 
    WHERE dealIdx = #{dealIdx}
  </select>

  <select id="getDealFileDetail" parameterType="String" resultType="FileVo">
    SELECT * FROM pjfile 
    WHERE fileTableIdx = #{fileTableIdx}
    AND fileTableType = 2
    AND fileOrder BETWEEN 0 AND 4
    ORDER BY fileOrder ASC
  </select>

  <insert id="getDealWrite" parameterType="DealVO">
    INSERT INTO pjdeal 
    (dealIdx, dealSellerUserIdx, dealSellerNick, dealTitle, dealCategory, 
     dealStatus, dealDescription, dealPrice, dealPackage, dealDirect, 
     dealDirectContent, dealCount, dealRegDate) 
    VALUES 
    (#{dealIdx}, #{dealSellerUserIdx}, #{dealSellerNick}, #{dealTitle}, 
     #{dealCategory}, #{dealStatus}, #{dealDescription}, #{dealPrice}, 
     #{dealPackage}, #{dealDirect}, #{dealDirectContent}, #{dealCount}, NOW())
  </insert>

  <insert id="getIDealFileInsert" parameterType="FileVo">
    INSERT INTO pjfile 
    (fileTableType, fileTableIdx, fileName, fileOrder, fileCreated) 
    VALUES 
    (2, #{fileTableIdx}, #{fileName}, #{fileOrder}, NOW())
  </insert>

  <delete id="getDealFileDelete" parameterType="FileVo">
    DELETE FROM pjfile 
    WHERE fileTableIdx = #{fileTableIdx}
    AND fileOrder = #{fileOrder}
  </delete>

  <update id="getDealFileUpdate" parameterType="FileVo">
    UPDATE pjfile 
    SET fileOrder = (
      SELECT tmp.new_order 
      FROM (
        SELECT fileName, (@row_number:=@row_number + 1) - 1 AS new_order
        FROM pjfile, (SELECT @row_number:=0) AS t
        WHERE fileTableIdx = #{fileTableIdx}
        ORDER BY fileOrder ASC
      ) AS tmp
      WHERE tmp.fileName = pjfile.fileName
    )
    WHERE fileTableIdx = #{fileTableIdx}
  </update>

  <update id="getDealUpdate" parameterType="DealVO">
    UPDATE pjdeal 
    SET dealTitle = #{dealTitle}, 
        dealCategory = #{dealCategory}, 
        dealStatus = #{dealStatus}, 
        dealDescription = #{dealDescription}, 
        dealPrice = #{dealPrice}, 
        dealPackage = #{dealPackage}, 
        dealDirect = #{dealDirect},
        dealDirectContent = #{dealDirectContent},
        dealCount = #{dealCount} 
    WHERE dealIdx = #{dealIdx}
  </update>



  <!-- 구분 2 -->

 <select id="getDealManagement" parameterType="String" resultType="DealVO">
    select * from pjdeal where dealSellerUserIdx = #{userIdx}
  </select>

  <update id="updateFileOrder">
    UPDATE file_table 
    SET file_order = #{newOrder}
    WHERE file_table_idx = #{dealIdx} 
    AND file_name = #{fileName}
  </update>

  <select id="getDealinterest" parameterType="String" resultType="DealFavoriteVO">
    SELECT df.*, d.dealTitle, d.dealPrice, d.dealStatus
    FROM pjdealfavorite df
    JOIN pjdeal d ON df.dealIdx = d.dealIdx
    WHERE df.userIdx = #{userIdx}
    ORDER BY df.favoriteIdx DESC
  </select>

</mapper>